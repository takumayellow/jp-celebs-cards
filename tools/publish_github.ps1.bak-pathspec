Param(
  [Parameter(Mandatory=$true)][string]$RepoOwner,   # 例: your-github-id
  [string]$RepoName = "jp-celebs-cards",
  [switch]$Private,                # 付けると private。省略で public
  [switch]$IncludeImages           # 付けると images/ を Git LFS で追跡
)
$ErrorActionPreference = "Stop"
$root = Split-Path -Parent (Split-Path -Parent $MyInvocation.MyCommand.Path)  # ...\jp-celebs-cards
Set-Location $root

function Ensure-Tool($name){ if(-not (Get-Command $name -ErrorAction SilentlyContinue)){ throw "$name が見つかりません" } }

Ensure-Tool git
git --version | Out-Null

# .gitignore（安全デフォルト: 画像とログは除外）
$ignore = @"
# build artifacts
data/data.js
logs/
*.log
.DS_Store
"@
if(-not (Test-Path .gitignore)){ $ignore | Set-Content .gitignore -Encoding UTF8 }
if(-not $IncludeImages){
  Add-Content .gitignore "images/" -Encoding UTF8
}

# README と LICENSE（なければ作る）
if(-not (Test-Path README.md)){
@"
# jp-celebs-cards

日本の芸能人を暗記するためのローカル学習ツール。  
- \`index.html\`: 単一ファイルのフロントエンド  
- \`data/cards.tsv\`: 名簿（タブ区切り）  
- \`tools/*.ps1\`: ビルド＆画像取得＆公開スクリプト  

> 画像は既定ではリポジトリに含めません（\`images/\`は .gitignore）。  
> 必要なら Git LFS で追跡してください（\`tools/publish_github.ps1 -IncludeImages\`）。
"@ | Set-Content README.md -Encoding UTF8
}
if(-not (Test-Path LICENSE)){
@"
MIT License

Copyright (c) $(Get-Date -Format yyyy)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction...

Note: Third-party images (Wikimedia Commons / Wikipedia) are subject to their
respective licenses and are NOT included by default.
"@ | Set-Content LICENSE -Encoding UTF8
}

# Git 初期化
if(-not (Test-Path (Join-Path $root ".git"))){ git init | Out-Null }

# 画像を含める場合は Git LFS
if($IncludeImages){
  try{
    git lfs install | Out-Null
    git lfs track "images/*" | Out-Null
    if(-not (Select-String -Path .gitignore -Pattern '^images/$' -SimpleMatch -ErrorAction SilentlyContinue)){ }
  }catch{
    Write-Warning "git-lfs が入っていない可能性。'git lfs install' を事前に実行してください。"
  }
}

# 典型ファイルを追加 & コミット
git add .gitignore README.md LICENSE index.html data\cards.tsv tools\*.ps1 .gitattributes 2>$null
git add .  # .gitignore が効くので安全
if(-not (git status --porcelain)){ Write-Host "✅ 変更なし（既に最新）" } else {
  git commit -m "init/publish: base app, scripts, ignore rules" | Out-Null
}
git branch -M main

# リモート作成 or 接続
$remoteUrl = "https://github.com/$RepoOwner/$RepoName.git"
$hasOrigin = (git remote) -contains 'origin'
if(-not $hasOrigin){
  $gh = Get-Command gh -ErrorAction SilentlyContinue
  if($gh){
    $vis = if($Private){ "--private" } else { "--public" }
    try{
      gh auth status 2>$null | Out-Null
      gh repo view "$RepoOwner/$RepoName" 2>$null | Out-Null
      if($LASTEXITCODE -ne 0){
        gh repo create "$RepoOwner/$RepoName" $vis --source "." --remote origin --push | Out-Null
        Write-Host "✅ GitHub に作成＆初回 push 完了: $remoteUrl"
        exit 0
      } else {
        git remote add origin $remoteUrl
      }
    }catch{
      git remote add origin $remoteUrl
    }
  } else {
    git remote add origin $remoteUrl
  }
}

# push
git push -u origin main
Write-Host "✅ push 完了: $remoteUrl"
